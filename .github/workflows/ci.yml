name: ci

on: [pull_request]

jobs:
  ci:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install dependencies
      run: |
        # Install test dependencies
        pip install ruff pytest pytest-asyncio httpx requests
        # Install API service dependencies for testing
        pip install -r services/api/requirements.txt
        # Install Router service dependencies for testing
        pip install -r services/router/requirements.txt
    
    - name: Lint with ruff
      run: ruff check .
    
    - name: Build Docker images
      run: make -C infra build
    
    - name: Start services for testing
      run: |
        # Use our Makefile commands for consistency
        echo "Initializing infrastructure..."
        make -C infra init
        
        echo "Starting all services..."
        make -C infra up
        
        echo "Waiting for services to be ready..."
        timeout 90s bash -c 'until curl -sf http://localhost:8000/health/; do echo "Waiting for API..."; sleep 5; done'
        timeout 30s bash -c 'until curl -sf http://localhost:7000/health; do echo "Waiting for Router..."; sleep 2; done'
        
        echo "All services started successfully!"
        make -C infra ps
        make -C infra test
    
    - name: Run Trivy vulnerability scanner - API
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'zahara-ai/api:latest'
        format: 'sarif'
        output: 'api-trivy-results.sarif'
        severity: 'CRITICAL'
        exit-code: '1'  # Fail build on critical vulnerabilities
        skip-update: true
    
    - name: Run Trivy vulnerability scanner - Router
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'zahara-ai/router:latest'
        format: 'sarif'
        output: 'router-trivy-results.sarif'
        severity: 'CRITICAL'
        exit-code: '1'  # Fail build on critical vulnerabilities
        skip-update: true
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      continue-on-error: true  # Don't fail if upload fails
      with:
        sarif_file: 'api-trivy-results.sarif'
    
    - name: Upload security reports as artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports-${{ github.run_id }}
        path: '*-trivy-results.sarif'
        retention-days: 30
    
    - name: Run tests
      run: pytest tests/ -v --tb=short
    
    - name: Cleanup
      if: always()
      run: make -C infra clean